{"version":3,"sources":["Img/headerImage.png","theme.js","Components/StylizedComponent/ButtonStylizedContained/style.js","Components/StylizedComponent/ButtonStylizedContained/buttonStylizedContained.js","Components/Header/style.js","Components/Header/header.js","Components/MainPage/style.js","Components/MainPage/mainPage.js","Components/Services/reducer.js","Components/Services/socketIO.js","Components/Spinner/style.js","Components/Spinner/spinner.js","Components/Router/publicRoute.js","Components/MenuStart/style.js","Components/StylizedComponent/TextFieldStylizedOutlined/style.js","Components/StylizedComponent/TextFieldStylizedOutlined/textFieldStylizedOutlined.js","Components/MenuStart/menuStart.js","Components/CreateCategories/style.js","Components/CreateCategories/createCategories.js","Components/Addphoto/style.js","Components/Addphoto/Addphoto.js","Components/Test/style.js","Components/CardObject/style.js","Components/Test/test.js","Components/DeleteCategories/style.js","Components/DeleteCategories/ModalConfirmDeleteCategories/style.js","Components/DeleteCategories/ModalConfirmDeleteCategories/modalConfirmDeleteCategories.js","Components/DeleteCategories/ModalConfirmDeletePhoto/style.js","Components/DeleteCategories/ModalConfirmDeletePhoto/modalConfirmDeletePhoto.js","Components/DeleteCategories/deleteCategories.js","Components/Router/router.js","index.js"],"names":["module","exports","WebFont","load","google","families","theme","responsiveFontSizes","createMuiTheme","palette","primary","main","size","appBarHeight","font","titleFontCategory","Poppins","useStyle","makeStyles","button","minWidth","ButtonStylizedContained","props","classes","Button","className","clsx","variant","color","disableElevation","onClick","onClickFunction","textbefore","text","root","width","height","backgroundImage","headerImage","backgroundSize","backgroundRepeat","marginBottom","title","fontWeight","textAlign","fontFamily","Header","Grid","container","justify","alignContent","item","xs","Typography","component","containerGrid","MainPage","history","useHistory","Container","spacing","push","reducer","state","action","type","isConnected","socket","payload","SocketIOContext","React","createContext","ComponentAuhtContext","useReducer","dispatch","connection","a","socketIO","process","Object","assign","useEffect","ConnectSocketIO","Provider","value","children","useStyles","zIndex","top","right","position","backgroundColor","display","loading","override","css","Spinner","PublicRoute","Component","rest","restricted","useContext","useTheme","render","global","autoComplete","textField","TextFieldStylizedOutlined","TextField","MenuStart","useState","setLoad","useSnackbar","enqueueSnackbar","closeSnackbar","categories","setCategories","refAge","createRef","valueGender","setValueGender","undefined","valueAutocomplete","setValueAutocomplete","errorForm","setErrorForm","fetch","method","headers","then","response","ok","json","Promise","reject","filter","elem","allPhotos","length","catch","error","res","message","autoHideDuration","anchorOrigin","vertical","horizontal","maxWidth","direction","alignItems","label","inputRef","Boolean","helperText","FormControl","InputLabel","id","Select","onChange","e","target","MenuItem","FormHelperText","Autocomplete","multiple","options","disableCloseOnSelect","getOptionLabel","option","name","renderOption","selected","Fragment","Checkbox","icon","fontSize","checkedIcon","style","marginRight","checked","renderInput","params","placeholder","errorValue","current","localStorage","setItem","JSON","stringify","categorie","age","gender","gridContainer","input","img","margin","accordion","titleImg","flex","containerAccordion","marginTop","deleteIcon","CreateCategories","allImg","setAllImg","refTextFieldCategory","onSubmit","preventDefault","nameCategory","credentials","body","accept","i","files","reader","FileReader","readAsDataURL","onload","temp","temp2","src","result","extension","split","pop","htmlFor","map","key","index","Accordion","AccordionSummary","expandIcon","ariant","stopPropagation","prevState","splice","deleteThisPhotos","AccordionDetails","justifyContent","Addphoto","actualCategorie","setActualCategorie","console","log","elevation","marginLeft","titre","description","prix","containerImg","containerRight","padding","allDisplayedPhotos","setAllDisplayedPhotos","changePhotos","photosHaveTobeDisplayed","j","x","Math","floor","random","sendUserData","data","parse","getItem","numberRound","roundRemaining","interval","setInterval","emit","clearInterval","arrayPhotosLoaded","dataJson","onLoad","bounds","getBoundingClientRect","y","left","bottom","changePhotosEvent","background","paper","border","boxShadow","shadows","transform","ModalConfirmDeleteCategories","Modal","open","openModalDeleteCategories","categoriesToDelete","getCategoriesToDelete","postCategories","setOpenModalDeleteCategories","ModalConfirmDeletePhoto","openModalDeletePhoto","postPhoto","photo","setOpenModalDeletePhoto","DeleteCategories","setPhoto","setState","getCategories","handleChange","event","keys","forEach","arrayId","ids","idImage","idCategory","FormControlLabel","categoryName","aria-label","_id","onFocus","control","key2","Router","path","exact","Test","notistackRef","onClickDismiss","ReactDOM","ThemeProvider","maxSnack","ref","IconButton","document","getElementById"],"mappings":"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","file":"static/js/main.c8d99933.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/headerImage.d87d5630.png\";","import {createMuiTheme, responsiveFontSizes} from \"@material-ui/core\";\r\nimport WebFont from 'webfontloader';\r\n\r\nWebFont.load({\r\n    google: {\r\n        families: ['Poppins']\r\n    }\r\n});\r\n\r\nexport const theme = responsiveFontSizes(\r\n    createMuiTheme({\r\n        palette: {\r\n            primary: {\r\n                main: '#0097A7'\r\n            },\r\n        },\r\n        size: {\r\n            appBarHeight: '120',\r\n        },\r\n        font: {\r\n            titleFontCategory: \"2em \\\"Poppins\\\"\",\r\n            Poppins: 'Poppins'\r\n        }\r\n    })\r\n)\r\n\r\nexport default theme;\r\n","import {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nexport const useStyle = makeStyles((theme) => ({\r\n    button:{\r\n       minWidth:'150px'\r\n    }\r\n}));","import { Button, Grid } from '@material-ui/core'\r\nimport {useStyle} from \"./style\";\r\nimport React from 'react'\r\nimport clsx from 'clsx'\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nexport default function ButtonStylizedContained(props) {\r\n\r\n    const classes = useStyle()\r\n\r\n    return(\r\n\r\n        <Button {...props}  className={clsx(classes.button,props.className)} variant=\"contained\" color=\"primary\" disableElevation\r\n            onClick={props.onClickFunction}>\r\n            {props.textbefore}{props.text}\r\n        </Button>\r\n    )\r\n}","import {makeStyles} from \"@material-ui/core/styles\";\r\nimport headerImage from '../../Img/headerImage.png'\r\n\r\nexport const useStyle = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        height: theme.size.appBarHeight + \"px\",\r\n        backgroundImage: 'url(' + headerImage + ')',\r\n        backgroundSize: '100% 100%',\r\n        backgroundRepeat: 'no-repeat',\r\n        marginBottom:'35px',\r\n    },\r\n    title: {\r\n        color:'white',\r\n        fontWeight:'bold',\r\n        textAlign: 'center',\r\n        fontFamily: theme.font.Poppins + \" !important\",\r\n    },\r\n}));","import React from \"react\";\r\nimport {useStyle} from \"./style\";\r\nimport {Grid} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n\r\nexport default function Header(){\r\n    const classes = useStyle()\r\n    return(\r\n        <Grid container className={classes.root} justify={\"center\"} alignContent={\"center\"}>\r\n            <Grid item xs={12}>\r\n                <Typography variant=\"h3\" component=\"h1\" className={classes.title}>\r\n                    Eye Sense\r\n                </Typography>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}","import {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nexport const useStyle = makeStyles((theme) => ({\r\n    containerGrid: {\r\n       textAlign:'center',\r\n    },\r\n\r\n}));","import React from \"react\";\r\nimport ButtonStylizedContained from '../StylizedComponent/ButtonStylizedContained/buttonStylizedContained'\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Header from \"../Header/header\";\r\nimport {Container} from \"@material-ui/core\";\r\nimport {useStyle} from \"./style\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nexport default function MainPage(props) {\r\n    const classes=useStyle();\r\n    let history = useHistory();\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Header/>\r\n            <Container>\r\n\r\n                <Grid container spacing={3} justify={\"center\"} className={classes.containerGrid}>\r\n                    <Grid item xs={12}>\r\n                        <ButtonStylizedContained text=\"COMMENCER UN TEST\"\r\n                                                 onClickFunction={() => {\r\n                                                    history.push(\"/StartTest\")\r\n                                                 }\r\n                                                 }>\r\n                        </ButtonStylizedContained>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <ButtonStylizedContained text=\"CRÉER UNE CATÉGORIE\"\r\n                                                 onClickFunction={() => {\r\n                                                     history.push(\"/CreateCategory\")\r\n                                                 }\r\n                                                 }>\r\n                        </ButtonStylizedContained>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <ButtonStylizedContained text=\"AJOUTER UNE PHOTO\"\r\n                                                 onClickFunction={() => {\r\n                                                     history.push(\"/AddPhotoToCategory\")\r\n                                                 }\r\n                                                 }>\r\n                        </ButtonStylizedContained>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <ButtonStylizedContained text=\"SUPPRIMER UNE CATEGORIE\"\r\n                                                 onClickFunction={() => {\r\n                                                     history.push(\"/DeleteCategory\")\r\n                                                 }\r\n                                                 }>\r\n                        </ButtonStylizedContained>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n\r\n        </div>\r\n\r\n    )\r\n}","export const reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"LOGIN\":\r\n            return {\r\n                isConnected : true,\r\n                socket:action.payload.socket\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import React, {useReducer ,useContext} from \"react\";\r\nimport {reducer} from \"./reducer\";\r\nimport socketIO from 'socket.io-client';\r\n\r\nconst SocketIOContext = React.createContext();\r\n\r\n\r\nexport  function ComponentAuhtContext(props) {\r\n\r\n    const socket = ConnectSocketIO()\r\n\r\n    return (\r\n        <SocketIOContext.Provider value={socket}> {props.children}</SocketIOContext.Provider>\r\n    )\r\n}\r\n\r\nexport const useSocketIO = () => {\r\n    return useContext(SocketIOContext);\r\n};\r\n\r\nfunction ConnectSocketIO() {\r\n    const [state, dispatch] = useReducer(reducer,{\r\n        isConnected :false\r\n    });\r\n\r\n\r\n    const connection = async () => {\r\n\r\n        let socket = socketIO(process.env.REACT_APP_API_URL+\"websiteNamespace\")\r\n        dispatch({\r\n            type: \"LOGIN\",\r\n            payload: Object.assign({socket}),\r\n        });\r\n    };\r\n\r\n    React.useEffect(() => {\r\n\r\n        connection()\r\n\r\n    },[]);\r\n\r\n\r\n    return {\r\n        state\r\n    };\r\n}\r\n\r\n","import {makeStyles} from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    main: {\r\n        zIndex:5,\r\n        top:'0',\r\n        right:'0',\r\n        position:\"fixed\",\r\n        width: '100%',\r\n        height: '100%',\r\n        backgroundColor:'rgba(255,255,255,0.7)',\r\n    },\r\n    display:{\r\n        display:'none',\r\n    },\r\n    loading:{\r\n\r\n    },\r\n}));\r\n\r\nexport default useStyles;","import React from \"react\";\r\nimport ClipLoader from \"react-spinners/CircleLoader\";\r\nimport {css} from \"@emotion/core\";\r\nimport useStyles from \"./style\";\r\nimport clsx from 'clsx';\r\nconst override = css`\r\n  transform:translate(-100%,-100%);\r\n   left:50%;\r\n   top:50%;\r\n position:absolute;\r\n \r\n`;\r\n\r\n\r\nfunction Spinner(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={ clsx(classes.main , !props.loading && classes.display)}>\r\n            <ClipLoader\r\n                css={override}\r\n                size={50}\r\n                color={props.color}\r\n\r\n                className={classes.loading}\r\n            />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport {useSocketIO} from \"../Services/socketIO\";\r\nimport Spinner from \"../Spinner/spinner\";\r\nimport {useTheme} from \"@material-ui/core/styles\";\r\n\r\n\r\nconst PublicRoute = ({component: Component, restricted, ...rest}) => {\r\n\r\n    let socket = useSocketIO()\r\n\r\n    const theme = useTheme()\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Route {...rest} render={props => (\r\n\r\n            socket.state.isConnected ?\r\n                <Component {...props} state={socket.state}/>\r\n                : <Spinner loading={true} color={theme.palette.primary.main}/>\r\n\r\n\r\n        )}/>\r\n\r\n    );\r\n};\r\n\r\nexport default PublicRoute;","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyle = makeStyles((theme) => ({\r\n    global:{\r\n      height:'100%'\r\n    },\r\n    autoComplete:{\r\n        minWidth:'350px',\r\n    },\r\n    textField:{\r\n        width:'350px',\r\n    },\r\n}));\r\n","import {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nexport const useStyle = makeStyles((theme) => ({\r\n    textField:{\r\n\r\n    }\r\n}));","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {useStyle} from \"./style\";\r\nimport clsx from \"clsx\";\r\n\r\nexport default function TextFieldStylizedOutlined(props){\r\n    const classes = useStyle()\r\n    return(\r\n        <TextField\r\n            {...props}\r\n\r\n            variant={\"outlined\"}\r\n            className={clsx(classes.textField,props.className)}\r\n        />\r\n    )\r\n}","import React from \"react\";\r\nimport {useStyle} from \"./style\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {Container} from \"@material-ui/core\";\r\nimport Header from \"../Header/header\";\r\nimport TextFieldStylizedOutlined from \"../StylizedComponent/TextFieldStylizedOutlined/textFieldStylizedOutlined\";\r\nimport ButtonStylizedContained from \"../StylizedComponent/ButtonStylizedContained/buttonStylizedContained\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport {useHistory} from 'react-router-dom';\r\nimport Spinner from \"../Spinner/spinner\";\r\nimport {useTheme} from \"@material-ui/core/styles\";\r\nimport {useSnackbar} from \"notistack\";\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\n\r\nexport default function MenuStart(props) {\r\n\r\n    const classes = useStyle();\r\n    const history = useHistory()\r\n    const theme = useTheme()\r\n    const [load, setLoad] = React.useState(true)\r\n    const {enqueueSnackbar, closeSnackbar} = useSnackbar()\r\n    const [categories, setCategories] = React.useState({})\r\n\r\n    const refAge = React.createRef()\r\n    const [valueGender,setValueGender] = React.useState(\"\")\r\n    const [valueAutocomplete, setValueAutocomplete] = React.useState(undefined)\r\n\r\n\r\n    const [errorForm, setErrorForm] = React.useState([\"\", \"\", \"\", \"\", \"\",\"\"])\r\n\r\n    React.useEffect(() => {\r\n        getCategories()\r\n    }, [])\r\n\r\n    function getCategories() {\r\n        setLoad(true)\r\n        fetch(process.env.REACT_APP_API_URL + \"api/categories/getAllCategories\", {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\",\r\n            }\r\n        })\r\n            .then((response) => {\r\n                if (response.ok) {\r\n                    return response.json();\r\n                } else {\r\n                    return Promise.reject(response);\r\n                }\r\n            })\r\n            .then((response) => {\r\n                let categories = response.filter((elem)=> {\r\n                    return elem.allPhotos.length >= 3\r\n                })\r\n                setCategories(categories)\r\n                setLoad(false)\r\n            })\r\n            .catch(function (error) {\r\n                setLoad(false)\r\n                error.json().then((res) => {\r\n                    if (res.message) {\r\n                        enqueueSnackbar(res.message.message, {\r\n                            autoHideDuration: 3000,\r\n                            variant: \"error\",\r\n                            anchorOrigin: {\r\n                                vertical: 'bottom',\r\n                                horizontal: 'center',\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                })\r\n\r\n            });\r\n    }\r\n\r\n\r\n    function startTest() {\r\n        setLoad(true)\r\n        let error = false\r\n        let errorValue = [\"\", \"\", \"\"]\r\n\r\n        if (refAge.current.value === \"\") {\r\n            error = true\r\n            errorValue[0] = \"Veuillez précisez l'âge\"\r\n        }\r\n        if (valueGender === \"\") {\r\n            error = true\r\n            errorValue[1] = \"Veuillez précisez le sexe\"\r\n        }\r\n        if (valueAutocomplete === undefined || valueAutocomplete.length === 0) {\r\n            error = true\r\n            errorValue[2] = \"Veuillez précisez au moins une catégorie\"\r\n        }\r\n\r\n\r\n        if(!error){\r\n            localStorage.setItem('test', JSON.stringify({\r\n                categorie: valueAutocomplete,\r\n                age: refAge.current.value,\r\n                gender: valueGender,\r\n            }));\r\n           history.push('/Test')\r\n        }\r\n        setLoad(false)\r\n        setErrorForm(errorValue)\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n            {\r\n                load ? <Spinner loading={true} color={theme.palette.primary.main}/> :\r\n\r\n                    <div>\r\n                        <Header/>\r\n\r\n                        <Container className={classes.global} maxWidth=\"xl\">\r\n                            <ButtonStylizedContained textbefore={<ArrowBackIcon/>} text={\"Retour\"}\r\n\r\n                                                     onClickFunction={() => {\r\n                                                         history.push('/')\r\n                                                     }}/>\r\n                            <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" spacing={2}>\r\n                                <Grid item>\r\n                                    <TextFieldStylizedOutlined className={classes.textField} label={\"Age\"}\r\n                                                               inputRef={refAge}\r\n                                                               error={Boolean(errorForm[0])}\r\n\r\n                                                               helperText={errorForm[0]}\r\n                                                               variant=\"outlined\"/>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <FormControl variant=\"outlined\" className={classes.textField}  error={Boolean(errorForm[1])}>\r\n                                        <InputLabel id=\"demo-simple-select-outlined-label\">Sexe</InputLabel>\r\n                                        <Select\r\n                                            className={classes.textField}\r\n                                            value={valueGender}\r\n                                            label={\"Sexe\"}\r\n                                            onChange={(e)=>setValueGender(e.target.value)}\r\n\r\n                                        >\r\n                                            <MenuItem value={\"H\"}>Homme</MenuItem>\r\n                                            <MenuItem value={\"F\"}>Femme</MenuItem>\r\n                                        </Select>\r\n                                        <FormHelperText>{errorForm[1]}</FormHelperText>\r\n                                    </FormControl>\r\n\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Autocomplete\r\n                                        multiple\r\n\r\n                                        id=\"checkboxes-tags-demo\"\r\n                                        options={categories}\r\n                                        onChange={(e, value) => {\r\n                                            setValueAutocomplete(value)\r\n                                        }}\r\n                                        disableCloseOnSelect\r\n                                        getOptionLabel={(option) => option.name}\r\n                                        renderOption={(option, {selected}) => (\r\n                                            <React.Fragment>\r\n                                                <Checkbox\r\n                                                    icon={<CheckBoxOutlineBlankIcon fontSize=\"small\"/>}\r\n                                                    checkedIcon={<CheckBoxIcon fontSize=\"small\"/>}\r\n                                                    style={{marginRight: 8}}\r\n                                                    checked={selected}\r\n                                                />\r\n                                                {option.name}\r\n                                            </React.Fragment>\r\n                                        )}\r\n                                        className={classes.autoComplete}\r\n                                        renderInput={(params) => (\r\n                                            <TextFieldStylizedOutlined {...params} variant=\"outlined\"\r\n                                                                       error={Boolean(errorForm[2])}\r\n                                                                       helperText={errorForm[2]}\r\n                                                                       label=\"Sélectionner une / des catégorie(s)\"\r\n                                                                       placeholder=\"Favorites\"/>\r\n                                        )}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <ButtonStylizedContained onClickFunction={startTest} text=\"COMMENCER LE TEST\"/>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Container>\r\n                    </div>\r\n            }\r\n        </div>\r\n\r\n    )\r\n}","import {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nexport const useStyle = makeStyles((theme) => ({\r\n    //1.2em \"Poppins\", sans-serif;\r\n    title: {\r\n        font: theme.font.titleFontCategory,\r\n        marginBottom: '15px',\r\n    },\r\n    gridContainer: {\r\n        textAlign: 'center',\r\n    },\r\n    input: {\r\n        display: 'none',\r\n    },\r\n    img: {\r\n        margin: 'auto',\r\n        width: '100%',\r\n    },\r\n    accordion: {\r\n        margin: 'auto !important',\r\n        width: '450px',\r\n    },\r\n    titleImg: {\r\n        textAlign: 'left',\r\n        flex: '1'\r\n    },\r\n    containerAccordion: {\r\n        marginTop: '25px',\r\n    },\r\n    deleteIcon:{\r\n      color:'red',\r\n    },\r\n}));","import React from \"react\";\r\nimport Header from \"../Header/header\";\r\nimport {Container} from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {useStyle} from \"./style\";\r\nimport TextFieldStylizedOutlined from \"../StylizedComponent/TextFieldStylizedOutlined/textFieldStylizedOutlined\";\r\nimport ButtonStylizedContained from \"../StylizedComponent/ButtonStylizedContained/buttonStylizedContained\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport {useSnackbar} from \"notistack\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\n\r\nexport default function CreateCategories() {\r\n    const classes = useStyle()\r\n    const history = useHistory()\r\n    const [allImg, setAllImg] = React.useState([])\r\n    const refTextFieldCategory = React.createRef();\r\n\r\n    const {enqueueSnackbar, closeSnackbar} = useSnackbar();\r\n\r\n    function loadImage(e) {\r\n        for (let i = 0 ; i < e.target.files.length ; i++){\r\n            if (e.target.files && e.target.files[i]) {\r\n                var reader = new FileReader();\r\n                let name = e.target.files[i].name;\r\n                reader.readAsDataURL(e.target.files[i])\r\n\r\n                reader.onload = (res) => {\r\n                    setAllImg((temp) => {\r\n                        let temp2 = [...temp]\r\n                        temp2.push({\r\n                            src: res.target.result,\r\n                            extension:name.split('.').pop(),\r\n                            name: name\r\n                        })\r\n                        return temp2\r\n                    })\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    function sendImage(e) {\r\n        e.preventDefault()\r\n\r\n        let nameCategory = refTextFieldCategory.current.value\r\n\r\n        if (nameCategory === \"\") {\r\n            enqueueSnackbar(\"Veuillez préciser le nom de la catégorie\", {\r\n                autoHideDuration: 3000,\r\n                variant:\"error\",\r\n                anchorOrigin: {\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }\r\n            });\r\n        } else {\r\n            fetch(process.env.REACT_APP_API_URL + \"api/categories/createCategories\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-type\": \"application/json\",\r\n                },\r\n                credentials: \"include\",\r\n                body: JSON.stringify({\r\n                    nameCategory : nameCategory,\r\n                    allImg: allImg,\r\n                })\r\n            })\r\n                .then((response) => {\r\n                    if (response.ok) {\r\n                        return response.json();\r\n                    } else {\r\n                        return Promise.reject(response);\r\n                    }\r\n                })\r\n                .then((response) => {\r\n                    enqueueSnackbar(response.message.message, {\r\n                        autoHideDuration: 3000,\r\n                        variant:\"success\",\r\n                        anchorOrigin: {\r\n                            vertical: 'bottom',\r\n                            horizontal: 'center',\r\n                        }\r\n                    });\r\n                })\r\n                .catch(function (error) {\r\n                    error.json().then((res)=>{\r\n                        if(res.message){\r\n                            enqueueSnackbar(res.message.message, {\r\n                                autoHideDuration: 3000,\r\n                                variant:\"error\",\r\n                                anchorOrigin: {\r\n                                    vertical: 'bottom',\r\n                                    horizontal: 'center',\r\n                                }\r\n                            });\r\n                        }\r\n\r\n                    })\r\n\r\n                });\r\n        }\r\n    }\r\n\r\n    const deleteThisPhotos = (e,index)=>{\r\n        e.stopPropagation()\r\n        setAllImg(prevState => {\r\n            let temp = [...prevState]\r\n            temp.splice(index,1)\r\n            return [...temp]\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Header/>\r\n            <Container maxWidth=\"xl\">\r\n                <form onSubmit={sendImage}>\r\n\r\n                    <ButtonStylizedContained textbefore={<ArrowBackIcon/>}\r\n                                             text={\"Retour\"} onClickFunction={() => {\r\n                        history.push('/')\r\n                    }}/>\r\n                    <Grid container justify=\"center\" className={classes.gridContainer} spacing={3}>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant=\"h5\" component=\"h2\" className={classes.title}>\r\n                                Créer une catégorie\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextFieldStylizedOutlined inputRef={refTextFieldCategory} label={\"Nom de la catégorie\"}/>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <input\r\n                                accept=\"image/*\"\r\n                                className={classes.input}\r\n                                id=\"contained-button-file\"\r\n                                multiple\r\n                                type=\"file\"\r\n                                onChange={loadImage}\r\n                            />\r\n                            <label htmlFor=\"contained-button-file\">\r\n                                <ButtonStylizedContained text={\"Ajouter une photo\"} component=\"span\"/>\r\n                            </label>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <ButtonStylizedContained type={\"submit\"} text=\"ENVOYER\"/>\r\n                        </Grid>\r\n                        <Grid item xs={12} className={classes.containerAccordion}>\r\n                            {\r\n                                allImg.map((key, index) => (\r\n                                    <Accordion key={index} className={classes.accordion}>\r\n                                        <AccordionSummary  expandIcon={<ExpandMoreIcon/>}>\r\n                                            <Typography ariant=\"h5\" component=\"h2\" className={classes.titleImg}>{key.name}</Typography>\r\n                                            <DeleteIcon className={classes.deleteIcon} onClick={(e)=>deleteThisPhotos(e,index)}/>\r\n                                        </AccordionSummary>\r\n                                        <AccordionDetails>\r\n                                            <img className={classes.img} src={key.src}/>\r\n                                        </AccordionDetails>\r\n\r\n                                    </Accordion>\r\n\r\n\r\n                                ))\r\n                            }\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n\r\n            </Container>\r\n        </div>\r\n\r\n    )\r\n}","import {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nexport const useStyle = makeStyles((theme) => ({\r\n    gridContainer: {\r\n        textAlign: 'center',\r\n    },\r\n    title: {\r\n        font: theme.font.titleFontCategory,\r\n        marginBottom: '15px',\r\n    },\r\n    input: {\r\n        display: 'none',\r\n    },\r\n    autoComplete: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n    },\r\n    accordion: {\r\n        margin: 'auto !important',\r\n        width: '450px',\r\n    },\r\n    containerAccordion:{\r\n        marginTop:'25px',\r\n    },\r\n\r\n    titleImg: {\r\n        textAlign: 'left',\r\n        flex: '1'\r\n    },\r\n    img: {\r\n        margin: 'auto',\r\n        width:\"100%\",\r\n    },\r\n    deleteIcon:{\r\n        color:'red',\r\n      },\r\n\r\n}));","import React from \"react\";\r\nimport {useStyle} from \"./style\";\r\nimport {Input, Typography} from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ButtonStylizedContained from \"../StylizedComponent/ButtonStylizedContained/buttonStylizedContained\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Header from \"../Header/header\"\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {useSnackbar} from \"notistack\";\r\nimport Spinner from \"../Spinner/spinner\";\r\nimport {useTheme} from \"@material-ui/core/styles\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\n\r\nexport default function Addphoto() {\r\n    const classes = useStyle();\r\n    const history = useHistory()\r\n    const [allImg, setAllImg] = React.useState([])\r\n    const [load, setLoad] = React.useState(true)\r\n    const [categories, setCategories] = React.useState({})\r\n    const [actualCategorie, setActualCategorie] = React.useState(null)\r\n\r\n    const {enqueueSnackbar, closeSnackbar} = useSnackbar()\r\n    const theme = useTheme()\r\n\r\n\r\n    function loadImage(e) {\r\n        for (let i = 0; i < e.target.files.length; i++) {\r\n            if (e.target.files && e.target.files[i]) {\r\n                var reader = new FileReader();\r\n                let name = e.target.files[i].name;\r\n                reader.readAsDataURL(e.target.files[i])\r\n\r\n                reader.onload = (res) => {\r\n                    setAllImg((temp) => {\r\n                        let temp2 = [...temp]\r\n                        temp2.push({\r\n                            src: res.target.result,\r\n                            extension: name.split('.').pop(),\r\n                            name: name\r\n                        })\r\n                        return temp2\r\n                    })\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    function getCategories() {\r\n        setLoad(true)\r\n        fetch(process.env.REACT_APP_API_URL + \"api/categories/getAllCategories\", {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\",\r\n            }\r\n        })\r\n            .then((response) => {\r\n                if (response.ok) {\r\n                    return response.json();\r\n                } else {\r\n                    return Promise.reject(response);\r\n                }\r\n            })\r\n            .then((response) => {\r\n                setCategories(response)\r\n                setLoad(false)\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error)\r\n                setLoad(false)\r\n                error.json().then((res) => {\r\n                    if (res.message) {\r\n                        enqueueSnackbar(res.message.message, {\r\n                            autoHideDuration: 3000,\r\n                            variant: \"error\",\r\n                            anchorOrigin: {\r\n                                vertical: 'bottom',\r\n                                horizontal: 'center',\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                })\r\n\r\n            });\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        getCategories()\r\n    }, [])\r\n\r\n    const sendPhotos = (e) => {\r\n        // eslint-disable-next-line eqeqeq\r\n        if (actualCategorie === null || allImg === null) {\r\n            enqueueSnackbar(\"NONONON\", {\r\n                autoHideDuration: 3000,\r\n                variant: \"error\",\r\n                anchorOrigin: {\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }\r\n            });\r\n        } else {\r\n            setLoad(true)\r\n            fetch(process.env.REACT_APP_API_URL + \"api/categories/addPhotos\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({\r\n                    categorie: actualCategorie,\r\n                    allImg: allImg\r\n                })\r\n            }).then((response) => {\r\n                if (response.ok) {\r\n                    return response.json();\r\n                } else {\r\n                    return Promise.reject(response);\r\n                }\r\n            })\r\n                .then((response) => {\r\n                    setLoad(false)\r\n                    enqueueSnackbar(response.message.message, {\r\n                        autoHideDuration: 3000,\r\n                        variant: \"success\",\r\n                        anchorOrigin: {\r\n                            vertical: 'bottom',\r\n                            horizontal: 'center',\r\n                        }\r\n                    });\r\n                })\r\n                .catch(function (error) {\r\n                    setLoad(false)\r\n                    error.json().then((res) => {\r\n                        if (res.message) {\r\n                            enqueueSnackbar(res.message.message, {\r\n                                autoHideDuration: 3000,\r\n                                variant: \"error\",\r\n                                anchorOrigin: {\r\n                                    vertical: 'bottom',\r\n                                    horizontal: 'center',\r\n                                }\r\n                            });\r\n                        }\r\n\r\n                    })\r\n\r\n                });\r\n        }\r\n    }\r\n    const deleteThisPhotos = (e, index) => {\r\n        e.stopPropagation()\r\n        setAllImg(prevState => {\r\n            let temp = [...prevState]\r\n            temp.splice(index, 1)\r\n            return [...temp]\r\n        })\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            {\r\n                load ? <Spinner loading={true} color={theme.palette.primary.main}/> :\r\n                    <div>\r\n                        <Header/>\r\n\r\n\r\n                        <Container maxWidth=\"xl\">\r\n                            <ButtonStylizedContained textbefore={<ArrowBackIcon/>}\r\n                                                     text={\"Retour\"} onClickFunction={() => {\r\n                                history.push('/')\r\n                            }}/>\r\n\r\n\r\n                            <Grid container justify=\"center\" className={classes.gridContainer} spacing={3}>\r\n                                <Grid item xs={12}>\r\n                                    <Typography className={classes.title}>\r\n                                        Ajouter une photo\r\n                                    </Typography>\r\n                                </Grid>\r\n\r\n\r\n                                <Grid item xs={12} className={classes.autoComplete}>\r\n                                    <Autocomplete\r\n                                        options={categories}\r\n                                        getOptionLabel={(option) => option.name}\r\n                                        style={{width: 300}}\r\n                                        value={actualCategorie}\r\n                                        onChange={(e, value) => setActualCategorie(value)}\r\n                                        renderInput={(params) => <TextField {...params} label=\"Catégorie\"\r\n                                                                            variant=\"outlined\"/>}\r\n                                    />\r\n                                </Grid>\r\n\r\n                                <Grid item xs={12}>\r\n                                    <input\r\n                                        accept=\"image/*\"\r\n                                        className={classes.input}\r\n                                        id=\"contained-button-file\"\r\n                                        multiple\r\n                                        type=\"file\"\r\n                                        onChange={loadImage}\r\n                                    />\r\n                                    <label htmlFor=\"contained-button-file\">\r\n                                        <ButtonStylizedContained text={\"Ajouter une photo\"} component=\"span\"/>\r\n                                    </label>\r\n                                </Grid>\r\n                                <Grid item xs={12} className={classes.containerAccordion}>\r\n                                    {\r\n                                        allImg.map((key, index) => (\r\n                                            <Accordion key={index} className={classes.accordion}>\r\n                                                <AccordionSummary expandIcon={<ExpandMoreIcon/>}>\r\n                                                    <Typography ariant=\"h5\" component=\"h2\"\r\n                                                                className={classes.titleImg}>{key.name}</Typography>\r\n                                                    <DeleteIcon className={classes.deleteIcon}\r\n                                                                onClick={(e) => deleteThisPhotos(e, index)}/>\r\n                                                </AccordionSummary>\r\n                                                <AccordionDetails>\r\n                                                    <img className={classes.img} src={key.src}/>\r\n                                                </AccordionDetails>\r\n                                            </Accordion>\r\n\r\n\r\n                                        ))\r\n                                    }\r\n                                </Grid>\r\n\r\n                                <Grid item xs={12}>\r\n                                    <ButtonStylizedContained type={\"submit\"} text=\"ENVOYER\"\r\n                                                             onClickFunction={() => sendPhotos()}/>\r\n                                </Grid>\r\n\r\n\r\n                            </Grid>\r\n                        </Container>\r\n                    </div>\r\n            }\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n","import {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nexport const useStyle = makeStyles((theme) => ({\r\n    img: {\r\n        width: '100%',\r\n        height: '200px',\r\n    },\r\n\r\n}));","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyle = makeStyles((theme) => ({\r\n  \r\n    img:{\r\n      height:'100%',\r\n      width:'100%',\r\n    },\r\n\r\n    elevation:{\r\n      height:'348px',\r\n      width: '424px',\r\n    },\r\n\r\n    container:{\r\n      color:'white',\r\n      height:'348px',\r\n      width: '424px',\r\n      fontFamily:'Roboto',\r\n    },\r\n\r\n    Button:{\r\n      color:'white',\r\n      backgroundColor:'#006876',\r\n      fontSize:'15px',\r\n      height:'17px',\r\n      marginBottom:'50px',\r\n      marginRight:'1px',\r\n      marginLeft:'1px',\r\n      \r\n    \r\n      \r\n\r\n    },\r\n\r\n    \r\n\r\n    titre:{\r\n      fontSize:\"18px\",\r\n      fontWeight:'bold',\r\n      marginBottom:'20px',\r\n    },\r\n\r\n    description:{\r\n      color:'black',\r\n      fontSize:'7px',\r\n      marginBottom:'50px',\r\n    },\r\n\r\n    prix:{\r\n      fontWeight: 'bold',\r\n      fontSize:'30px',\r\n      textAlign:'right',\r\n      color:'black'\r\n    },\r\n\r\n    containerImg:{\r\n        height:'100%',\r\n        width:'100%',\r\n    },\r\n\r\n    containerRight:{\r\n      height: '100%',\r\n      width: '100%',\r\n      backgroundColor: '#56C7D6',\r\n      padding:'20px',\r\n      \r\n    },\r\n\r\n}));\r\n\r\n","import React from \"react\";\r\nimport {useStyle} from \"./style\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport Spinner from \"../Spinner/spinner\";\r\nimport {useTheme} from \"@material-ui/core/styles\";\r\nimport {useSnackbar} from \"notistack\";\r\nimport CardObject from \"../CardObject/cardObject\";\r\nimport Header from \"../Header/header\";\r\nimport {Container} from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\n\r\nexport default function MenuStart(props) {\r\n\r\n\r\n    const classes = useStyle();\r\n    const history = useHistory()\r\n    const theme = useTheme()\r\n    const [load, setLoad] = React.useState(true)\r\n    const {enqueueSnackbar, closeSnackbar} = useSnackbar()\r\n    const [allDisplayedPhotos, setAllDisplayedPhotos] = React.useState([])\r\n\r\n    let isUserDataSent = false\r\n\r\n\r\n    const changePhotos = (photosHaveTobeDisplayed) => {\r\n\r\n        var j, x, i;\r\n        for (i = photosHaveTobeDisplayed.length - 1; i > 0; i--) {\r\n            j = Math.floor(Math.random() * (i + 1));\r\n            x = photosHaveTobeDisplayed[i];\r\n            photosHaveTobeDisplayed[i] = photosHaveTobeDisplayed[j];\r\n            photosHaveTobeDisplayed[j] = x;\r\n        }\r\n\r\n\r\n        setAllDisplayedPhotos(photosHaveTobeDisplayed)\r\n\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        sendUserData()\r\n        let data = JSON.parse(localStorage.getItem('test'));\r\n        let categorie = data.categorie\r\n        let numberRound = data.categorie.length\r\n        let roundRemaining = data.categorie.length\r\n        setLoad(false)\r\n        changePhotos(categorie[0].allPhotos)\r\n        roundRemaining = roundRemaining - 1\r\n        let interval = setInterval(() => {\r\n            if (roundRemaining === 0) {\r\n                props.state.socket.emit(\"test finished\", true)\r\n                isUserDataSent = false\r\n                history.push('/')\r\n            } else {\r\n                changePhotos(categorie[numberRound - roundRemaining].allPhotos)\r\n                roundRemaining = roundRemaining - 1\r\n            }\r\n\r\n\r\n        }, 5000);\r\n\r\n        return () => clearInterval(interval);\r\n\r\n\r\n    }, []);\r\n\r\n    let arrayPhotosLoaded = []\r\n    const changePhotosEvent = (e, index, id) => {\r\n        let bounds = e.target.getBoundingClientRect()\r\n        arrayPhotosLoaded.push({\r\n            \"_id\": id,\r\n            \"topRight\": {x: bounds.right, y: bounds.top},\r\n            \"topLeft\": {x: bounds.left, y: bounds.top},\r\n            \"bottomRight\": {x: bounds.right, y: bounds.bottom},\r\n            \"bottomLeft\": {x: bounds.left, y: bounds.bottom}\r\n        })\r\n        // eslint-disable-next-line eqeqeq\r\n        if (arrayPhotosLoaded.length === allDisplayedPhotos.length) {\r\n            props.state.socket.emit(\"send photos\", arrayPhotosLoaded)\r\n            arrayPhotosLoaded = []\r\n        }\r\n    }\r\n\r\n    const sendUserData = () => {\r\n\r\n        let data = JSON.parse(localStorage.getItem('test'));\r\n\r\n\r\n        let nameCategory = []\r\n        for (let i = 0 ; i < data.categorie.length ; i++){\r\n            nameCategory.push(data.categorie[i].name)\r\n        }\r\n        console.log(nameCategory)\r\n\r\n        let dataJson = {\r\n            \"age\": data.age,\r\n            \"gender\": data.gender,\r\n            \"categorie\": nameCategory\r\n        }\r\n        props.state.socket.emit(\"send user data\", dataJson)\r\n        isUserDataSent = true\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                load ? <Spinner loading={true} color={theme.palette.primary.main}/> :\r\n                    <div >\r\n                        <Header/>\r\n                        <Container>\r\n                            <Grid container spacing={4}>\r\n                                {\r\n                                    allDisplayedPhotos.map((key, index) => {\r\n\r\n\r\n                                        return (\r\n                                            <Grid item xs={4}>\r\n                                                <img className={classes.img}\r\n                                                     id={key}\r\n                                                     onLoad={(e) => changePhotosEvent(e, index, key)}\r\n                                                     src={process.env.REACT_APP_API_URL + 'api/photos/getPhotos?id=' + key}/>\r\n                                            </Grid>\r\n                                        )\r\n\r\n                                    })\r\n                                }\r\n\r\n                            </Grid>\r\n\r\n                        </Container>\r\n\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n\r\n}","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyle = makeStyles((theme) => ({\r\n    img: {\r\n        margin: 'auto',\r\n        width: '100%',\r\n    },\r\n    accordion: {\r\n        margin: 'auto !important',\r\n        width: '450px',\r\n    },\r\n    containerGrid: {\r\n        textAlign:'center',\r\n        marginTop:'10px',\r\n    },\r\n}));","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyle = makeStyles((theme) => ({\r\n    root: { \r\n        position: 'absolute',\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: 'max-content',\r\n        height: 'auto',\r\n        textAlign: 'center',\r\n    },\r\n    title: {\r\n        marginBottom: '25px',\r\n    },\r\n}));\r\n\r\n\r\n","import { Modal } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useStyle } from \"./style\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ButtonStylizedContained from \"../../StylizedComponent/ButtonStylizedContained/buttonStylizedContained\";\r\n\r\n\r\nexport default function ModalConfirmDeleteCategories(props) {\r\n\r\n    const classes = useStyle()\r\n\r\n    return (\r\n        <Modal open={props.openModalDeleteCategories}>\r\n            <div  className={classes.root}>\r\n                <Grid container justify={\"center\"}>\r\n\r\n                    <Grid item xs={12}>\r\n                        <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" className={classes.title}>\r\n                            Voulez-vous vraiment supprimer ces catégories ?\r\n                        </Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6}>\r\n                        <ButtonStylizedContained text={\"Valider\"} onClickFunction={() => {\r\n                            let categoriesToDelete = props.getCategoriesToDelete()\r\n                            props.postCategories(categoriesToDelete)\r\n                            props.setOpenModalDeleteCategories(false)\r\n                        }} />\r\n\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <ButtonStylizedContained text={\"Retour\"} onClickFunction={() => {\r\n                            props.setOpenModalDeleteCategories(false)\r\n                        }} />\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n\r\n\r\n        </Modal>\r\n    );\r\n\r\n}","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyle = makeStyles((theme) => ({\r\n    root: { \r\n        position: 'absolute',\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: 'max-content',\r\n        height: 'auto',\r\n        textAlign: 'center',\r\n    },\r\n    title: {\r\n        marginBottom: '25px',\r\n    },\r\n}));\r\n\r\n\r\n","import { Modal } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useStyle } from \"./style\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ButtonStylizedContained from \"../../StylizedComponent/ButtonStylizedContained/buttonStylizedContained\";\r\n\r\n\r\nexport default function ModalConfirmDeletePhoto(props) {\r\n\r\n    const classes = useStyle()\r\n\r\n    return (\r\n        <Modal open={props.openModalDeletePhoto}>\r\n            <div  className={classes.root}>\r\n                <Grid container justify={\"center\"}>\r\n\r\n                    <Grid item xs={12}>\r\n                        <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" className={classes.title}>\r\n                            Voulez-vous vraiment supprimer cette photo ?\r\n                        </Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6}>\r\n                        <ButtonStylizedContained text={\"Valider\"} onClickFunction={() => {\r\n                            props.postPhoto(props.photo)\r\n                            props.setOpenModalDeletePhoto(false)\r\n                        }} />\r\n\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <ButtonStylizedContained text={\"Retour\"} onClickFunction={() => {\r\n                            props.setOpenModalDeletePhoto(false)\r\n                        }} />\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n\r\n\r\n        </Modal>\r\n    );\r\n\r\n}","import React from \"react\";\r\nimport Header from \"../Header/header\";\r\nimport Spinner from \"../Spinner/spinner\";\r\nimport { Container, Grid } from \"@material-ui/core\";\r\nimport { useStyle } from \"./style\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport ButtonStylizedContained from \"../StylizedComponent/ButtonStylizedContained/buttonStylizedContained\";\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { BsTrash } from \"react-icons/bs\";\r\nimport { BsTrashFill } from \"react-icons/bs\";\r\nimport ModalConfirmDeleteCategories from \"./ModalConfirmDeleteCategories/modalConfirmDeleteCategories\";\r\nimport ModalConfirmDeletePhoto from \"./ModalConfirmDeletePhoto/modalConfirmDeletePhoto\";\r\n\r\nexport default function DeleteCategories() {\r\n\r\n    const classes = useStyle()\r\n    const theme = useTheme()\r\n    const history = useHistory()\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar()\r\n\r\n    const [categories, setCategories] = React.useState({})\r\n    const [photo, setPhoto] = React.useState({})\r\n    const [load, setLoad] = React.useState(true)\r\n    const [state, setState] = React.useState({})\r\n\r\n    const [openModalDeleteCategories, setOpenModalDeleteCategories] = React.useState(false)\r\n    const [openModalDeletePhoto, setOpenModalDeletePhoto] = React.useState(false)\r\n\r\n    React.useEffect(() => {\r\n        getCategories()\r\n    }, []);\r\n\r\n    const handleChange = (event) => {\r\n        setState({ ...state, [event.target.name]: event.target.checked });\r\n    };\r\n\r\n    function getCategories() {\r\n        setLoad(true)\r\n        fetch(process.env.REACT_APP_API_URL + \"api/categories/getAllCategories\", {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\",\r\n            }\r\n        })\r\n            .then((response) => {\r\n                if (response.ok) {\r\n                    return response.json();\r\n                } else {\r\n                    return Promise.reject(response);\r\n                }\r\n            })\r\n            .then((response) => {\r\n                setCategories(response)\r\n                setLoad(false)\r\n            })\r\n            .catch(function (error) {\r\n                setLoad(false)\r\n                error.json().then((res) => {\r\n                    if (res.message) {\r\n                        enqueueSnackbar(res.message.message, {\r\n                            autoHideDuration: 3000,\r\n                            variant: \"error\",\r\n                            anchorOrigin: {\r\n                                vertical: 'bottom',\r\n                                horizontal: 'center',\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                })\r\n\r\n            });\r\n    }\r\n\r\n    function getCategoriesToDelete() {\r\n        let categoriesToDelete = []\r\n        Object.keys(state).forEach(key => {\r\n            if (state[key] === true) {\r\n                categoriesToDelete.push(key.split('_')[0])\r\n            }\r\n        })\r\n        return categoriesToDelete\r\n    }\r\n\r\n    function postCategories(categories) {\r\n        setLoad(true)\r\n        if (categories === []) {\r\n            enqueueSnackbar(\"Veuillez choisir des objets à supprimer\", {\r\n                autoHideDuration: 3000,\r\n                variant: \"error\",\r\n                anchorOrigin: {\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }\r\n            });\r\n        } else {\r\n            fetch(process.env.REACT_APP_API_URL + \"api/categories/deleteCategories\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({\r\n                    arrayId: categories,\r\n                })\r\n            })\r\n                .then((response) => {\r\n                    if (response.ok) {\r\n\r\n                        return response.json();\r\n                    } else {\r\n                        return Promise.reject(response);\r\n                    }\r\n                })\r\n                .then((response) => {\r\n                    getCategories()\r\n                    setLoad(false)\r\n                    setState([])\r\n                    enqueueSnackbar(response.message.message, {\r\n                        autoHideDuration: 3000,\r\n                        variant: \"success\",\r\n                        anchorOrigin: {\r\n                            vertical: 'bottom',\r\n                            horizontal: 'center',\r\n                        }\r\n                    });\r\n                })\r\n                .catch(function (error) {\r\n                    setLoad(false)\r\n                    setState([])\r\n                    error.json().then((res) => {\r\n                        if (res.message) {\r\n                            enqueueSnackbar(res.message.message, {\r\n                                autoHideDuration: 3000,\r\n                                variant: \"error\",\r\n                                anchorOrigin: {\r\n                                    vertical: 'bottom',\r\n                                    horizontal: 'center',\r\n                                }\r\n                            });\r\n                        }\r\n\r\n                    })\r\n\r\n                });\r\n        }\r\n    }\r\n\r\n    function postPhoto(ids) {\r\n        setLoad(true)\r\n        fetch(process.env.REACT_APP_API_URL + \"api/categories/deletePhotos\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                idImage: ids.idImage,\r\n                idCategory: ids.idCategory,\r\n            })\r\n        })\r\n            .then((response) => {\r\n                if (response.ok) {\r\n\r\n                    return response.json();\r\n                } else {\r\n                    return Promise.reject(response);\r\n                }\r\n            })\r\n            .then((response) => {\r\n                getCategories()\r\n                setLoad(false)\r\n                setPhoto({})\r\n                enqueueSnackbar(response.message.message, {\r\n                    autoHideDuration: 3000,\r\n                    variant: \"success\",\r\n                    anchorOrigin: {\r\n                        vertical: 'bottom',\r\n                        horizontal: 'center',\r\n                    }\r\n                });\r\n            })\r\n            .catch(function (error) {\r\n                setLoad(false)\r\n                setPhoto({})\r\n                error.json().then((res) => {\r\n                    if (res.message) {\r\n                        enqueueSnackbar(res.message.message, {\r\n                            autoHideDuration: 3000,\r\n                            variant: \"error\",\r\n                            anchorOrigin: {\r\n                                vertical: 'bottom',\r\n                                horizontal: 'center',\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                })\r\n\r\n            });\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                load ? <Spinner loading={true} color={theme.palette.primary.main}></Spinner> :\r\n                    <div>\r\n                        <ModalConfirmDeleteCategories\r\n                            openModalDeleteCategories={openModalDeleteCategories}\r\n                            setOpenModalDeleteCategories={setOpenModalDeleteCategories}\r\n                            getCategoriesToDelete={getCategoriesToDelete}\r\n                            postCategories={postCategories}\r\n                        />\r\n                        <ModalConfirmDeletePhoto\r\n                            openModalDeletePhoto={openModalDeletePhoto}\r\n                            setOpenModalDeletePhoto={setOpenModalDeletePhoto}\r\n                            photo={photo}\r\n                            postPhoto={postPhoto}\r\n                        />\r\n                        <Header />\r\n\r\n                        <Container maxWidth=\"xl\">\r\n                            <ButtonStylizedContained textbefore={<ArrowBackIcon />}\r\n                                text={\"Retour\"} onClickFunction={() => {\r\n                                    history.push('/')\r\n                                }\r\n                                } />\r\n                            {\r\n                                categories.map((key, index) => (\r\n                                    <Accordion key={index} className={classes.accordion}>\r\n                                        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                                            <FormControlLabel className={classes.categoryName}\r\n                                                aria-label={key._id + \"_label\"}\r\n                                                onClick={(event) => event.stopPropagation()}\r\n                                                onFocus={(event) => event.stopPropagation()}\r\n                                                control={<Checkbox\r\n                                                    icon={<BsTrash />}\r\n                                                    checkedIcon={<BsTrashFill />}\r\n                                                    name={key._id + \"_checkbox\"}\r\n                                                    color={theme.palette.primary.main}\r\n                                                    onChange={handleChange}\r\n                                                />}\r\n                                            />\r\n                                            <Typography variant=\"h5\" component=\"h2\">{key.name}</Typography>\r\n\r\n                                        </AccordionSummary>\r\n                                        <AccordionDetails>\r\n                                            <Grid>\r\n                                                {\r\n                                                    key.allPhotos.map((key2, index) => (\r\n                                                        <Grid item xs={12}>\r\n                                                            <img\r\n                                                                key={index}\r\n                                                                className={classes.img}\r\n                                                                src={process.env.REACT_APP_API_URL + 'api/photos/getPhotos?id=' + key2}\r\n                                                                onClick={() => {\r\n                                                                    setPhoto({idImage: key2,\r\n                                                                              idCategory: key._id})\r\n                                                                    setOpenModalDeletePhoto(true)\r\n                                                                }}\r\n                                                            />\r\n                                                        </Grid>\r\n                                                    ))\r\n                                                }\r\n                                            </Grid>\r\n\r\n\r\n                                        </AccordionDetails>\r\n                                    </Accordion>\r\n                                ))\r\n                            }\r\n                            <Grid container spacing={3} justify={\"center\"} className={classes.containerGrid}>\r\n                                <Grid item xs={12}>\r\n                                    <ButtonStylizedContained\r\n                                        text={\"Supprimer\"} onClickFunction={() => {\r\n                                            setOpenModalDeleteCategories(true)\r\n                                        }} />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Container>\r\n                    </div>\r\n            }\r\n        </div>\r\n\r\n    )\r\n}","import React from \"react\";\r\nimport {BrowserRouter, Switch} from \"react-router-dom\";\r\nimport MainPage from \"../MainPage/mainPage\";\r\nimport PublicRoute from \"./publicRoute\";\r\nimport MenuStart from \"../MenuStart/menuStart\";\r\nimport CreateCategories from \"../CreateCategories/createCategories\";\r\nimport Addphoto from \"../Addphoto/Addphoto\";\r\nimport Test from \"../Test/test\"\r\nimport {useSocketIO} from '../Services/socketIO'\r\nimport DeleteCategories from \"../DeleteCategories/deleteCategories\";\r\n\r\nexport default function Router() {\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n\r\n                <PublicRoute path={\"/CreateCategory\"} exact component={CreateCategories}/>\r\n                <PublicRoute path={\"/DeleteCategory\"} exact component={DeleteCategories}/>\r\n                <PublicRoute path={\"/AddPhotoToCategory\"} exact component={Addphoto}/>\r\n                <PublicRoute path={\"/StartTest\"} exact component={MenuStart}/>\r\n                <PublicRoute path={\"/Test\"} exact component={Test}/>\r\n                <PublicRoute path={\"/\"} exact component={MainPage}/>\r\n                <PublicRoute path={\"*\"} exact component={MainPage}/>\r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport theme from \"./theme\";\r\nimport {ThemeProvider} from '@material-ui/core/styles'\r\nimport {SnackbarProvider} from 'notistack'\r\nimport Router from \"./Components/Router/router\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport {ComponentAuhtContext} from \"./Components/Services/socketIO\";\r\n\r\nconst notistackRef = React.createRef();\r\nconst onClickDismiss = key => () => {\r\n    notistackRef.current.closeSnackbar(key);\r\n}\r\n\r\nReactDOM.render(\r\n    <ComponentAuhtContext>\r\n\r\n        <ThemeProvider theme={theme}>\r\n            <SnackbarProvider maxSnack={4} ref={notistackRef}\r\n                              action={(key) => (\r\n                                  <IconButton onClick={onClickDismiss(key)}>\r\n                                      <CloseIcon fontSize=\"small\" style={{color: 'white'}}/>\r\n                                  </IconButton>\r\n                              )}>\r\n                <Router/>\r\n            </SnackbarProvider>\r\n        </ThemeProvider>\r\n    </ComponentAuhtContext>\r\n    ,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}